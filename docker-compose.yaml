version: '3'

services:
  trace:
    container_name: trace
    image: openzipkin/zipkin
    restart: always
    ports:
      - 9411:9411
    expose:
      - 9411

  config:
    container_name: config
    image: daniellygj/microservices-config:1.0
    restart: always
    environment:
      URI: 'https://github.com/daniellygj/microservicos.git'
    ports:
      - 8888:8888
    expose:
      - "8888"

  gateway:
    container_name: gateway
    image: daniellygj/microservices-gateway:1.0
    restart: always
    environment:
      CONFIG_SERVER_URL: 'http://config:8888'
      EUREKA_URL: 'http://discovery:8761/eureka/'
    ports:
      - 8080:8080
    expose:
      - "8080"
    depends_on:
      - config
      - discovery

  product:
    container_name: product
    image: daniellygj/microservices-product:1.0
    restart: always
    environment:
      CONFIG_SERVER_URL: 'http://config:8888'
      EUREKA_URL: 'http://discovery:8761/eureka/'
      JMS_URL: 'tcp://jms:61616'
      ZIPKIN_URL: 'http://trace:9411/'
    ports:
      - 8081:8081
    depends_on:
      - config
      - discovery
      - jms

  discovery:
    container_name: discovery
    image: daniellygj/microservices-discovery:1.0
    restart: always
    environment:
      CONFIG_SERVER_URL: 'http://config:8888'
    ports:
      - 8761:8761
    expose:
      - "8761"
    depends_on:
      - config

  jms:
    container_name: jms
    image: rmohr/activemq
    restart: always
    volumes:
      - jms_volume:/var/lib/jms/data
    ports:
      - 6161:61616
      - 8161:8161
    expose:
      - 6161
      - 8161

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    hostname: mysql
    volumes:
      - mysql_volume:/var/lib/mysql/data
    environment:
      MYSQL_DATABASE: 'sales'
      MYSQL_USER: 'sales'
      MYSQL_PASSWORD: 'sales123'
      MYSQL_ROOT_PASSWORD: 'sales123'
    ports:
      - 3307:3306
    expose:
      - "3307"

  sales:
    container_name: sales
    image: daniellygj/microservices-sales:1.0
    restart: always
    environment:
      CONFIG_SERVER_URL: 'http://config:8888'
      EUREKA_URL: 'http://discovery:8761/eureka/'
      JMS_URL: 'tcp://jms:61616'
      MYSQL_HOST: 'mysql'
      MYSQL_PORT: '3306'
      MYSQL_USERNAME: 'sales'
      MYSQL_PASSWORD: 'sales123'
      ZIPKIN_URL: 'http://trace:9411/'
    ports:
      - 8082:8082
    expose:
      - "8082"
    depends_on:
      - mysql
      - config
      - discovery
      - jms
      - prometheus

  redis:
    container_name: redis
    image: redis
    restart: always
    hostname: redis
    ports:
      - 6379:6379
    expose:
      - "6379"

  coupons:
    container_name: coupons
    image: daniellygj/microservices-coupons:1.0
    restart: always
    environment:
      CONFIG_SERVER_URL: 'http://config:8888'
      EUREKA_URL: 'http://discovery:8761/eureka/'
      REDIS_HOST: 'redis'
      ZIPKIN_URL: 'http://trace:9411/'
    ports:
      - 8083:8083
    expose:
      - "8083"
    depends_on:
      - config
      - discovery
      - redis
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    expose:
      - 9090
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    expose:
      - 3000
    ports:
      - 3000:3000

  logspout:
    image: gliderlabs/logspout:v3
    command: 'udp://logstash:5000'
    links:
      - logstash
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    depends_on:
      - elasticsearch
      - logstash
      - kibana

  logstash:
    image: logstash:2.1.1
    environment:
      - STDOUT=true
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
    command: 'logstash -e "input { udp { port => 5000 } } output { elasticsearch { hosts => elasticsearch } }"'

  kibana:
    image: kibana:4.1.2
    links:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:1.5.2
    ports:
      - 9200:9200
      - 9300:9300

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    expose:
      - 5432

  keycloak:
    image: jboss/keycloak:11.0.0
    container_name: keycloak
    restart: on-failure
    volumes:
      - ./realm-export.json:/tmp/keycloak/config/realm-export.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/keycloak/config/realm-export.json
    command:
      - "-b"
      - "0.0.0.0"
      - "-Djboss.socket.binding.port-offset=10000"
    expose:
      - 18080
    ports:
      - 18080:18080
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  jms_volume:
    driver: local
  mysql_volume:
    driver: local
